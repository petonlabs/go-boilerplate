version: '3'

vars:
  DB_DSN: '{{.DB_DSN | default ""}}'

tasks:
  help:
    desc: print this help message
    cmds:
    - task --list-all
    silent: true

  confirm:
    desc: confirmation prompt
    cmds:
    - |
      echo -n 'Are you sure? [y/N] ' && read ans && [ ${ans:-N} = y ]
    silent: true
    internal: true

  run:
    desc: run the cmd/go-boilerplate application
    cmds:
    - go run ./cmd/go-boilerplate

  migrations:new:
    desc: create a new database migration
    vars:
      NAME: '{{.name | default ""}}'
    cmds:
    - |
      if [ -z "{{.NAME}}" ]; then
        echo "Error: name parameter is required"
        echo "Usage: task migrations:new name=migration_name"
        exit 1
      fi
    - echo 'Creating migration file for {{.NAME}}...'
    - tern new -m ./internal/database/migrations {{.NAME}}

  migrations:up:
    desc: apply all up database migrations
    deps: [ confirm ]
    cmds:
    - echo 'Running up migrations...'
    - tern migrate -m ./internal/database/migrations --conn-string {{.DB_DSN}}

  tidy:
    desc: format all .go files, and tidy and vendor module dependencies
    cmds:
    - echo 'Formatting .go files...'
    - go fmt ./...
    - echo 'Tidying module dependencies...'
    - go mod tidy
    - echo 'Verifying dependencies...'
    - go mod verify

  docker:build:
    desc: Build backend Docker image
    dir: ../..
    cmds:
      - docker build -f apps/backend/Dockerfile -t go-boilerplate/backend:latest .

  docker:up:
    desc: Start stack (backend, postgres, redis, backup)
    dir: ../..
    cmds:
      - docker compose up -d

  docker:down:
    desc: Stop stack
    dir: ../..
    cmds:
      - docker compose down

  backup:run:
    desc: Run backup now
    dir: ../..
    cmds:
      - docker compose run --rm db-backup /bin/sh /backup/run-backup.sh

  backup:restore:
    desc: Restore from S3 URI (task backup:restore URI=s3://bucket/key)
    dir: ../..
    vars:
      URI: '{{.URI | default ""}}'
    cmds:
      - |
        if [ -z "{{.URI}}" ]; then
          echo "Error: URI parameter is required"
          echo "Usage: task backup:restore URI=s3://bucket/key"
          exit 1
        fi
      - docker compose run --rm -e S3_URI={{.URI}} db-backup /bin/sh /backup/restore.sh {{.URI}}

