name: CI

on:
  push:
    # run CI only for main and dev branches
    branches: [ 'main', 'dev' ]
  pull_request:
    # run CI for PRs targeting main and dev
    branches: [ 'main', 'dev' ]

jobs:
  build:
    name: Build & Test (Go ${{ matrix.go }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/backend
    strategy:
      matrix:
        go: [ '1.24', '1.25' ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-modules-

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go }}

      - name: Prepare module
        run: |
          go env -w GOPROXY=https://proxy.golang.org,direct
          go mod download

      - name: Check formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "gofmt found issues:" && gofmt -l .
            exit 1
          fi

      - name: Run golangci-lint (download binary)
        run: |
          echo "Downloading golangci-lint v1.59.0..."
          curl -sSfL https://github.com/golangci/golangci-lint/releases/download/v1.59.0/golangci-lint-1.59.0-linux-amd64.tar.gz -o /tmp/golangci.tgz
          tar -xzf /tmp/golangci.tgz -C /tmp
          /tmp/golangci-lint-1.59.0-linux-amd64/golangci-lint run --config .golangci.yml --out-format=colored-line-number --timeout 5m ./...

      - name: Govulncheck (vuln scan for Go modules)
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Install gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec (security checks)
        run: |
          gosec ./...

      - name: Vet
        run: |
          go vet ./...

      - name: Test
        run: |
          go test ./... -v

      - name: Build binary
        run: |
          mkdir -p bin
          go build -o bin/server ./cmd/go-boilerplate

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-${{ matrix.go }}
          path: apps/backend/bin/server
