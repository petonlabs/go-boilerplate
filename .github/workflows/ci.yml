name: CI

on:
  push:
    branches: [ 'main', 'dev' ]
  pull_request:
    branches: [ 'main', 'dev' ]

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/backend
    strategy:
      matrix:
        go: [ '1.25.0' ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: apps/backend/go.sum


      - name: Verify dependencies
        run: |
          go mod download
          go mod verify

      - name: Check formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "❌ Code is not formatted. Run 'gofmt -w .' to fix."
            gofmt -d .
            exit 1
          fi
          echo "✅ Code formatting is correct"

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.5.0
          working-directory: apps/backend
          args: --config .golangci.yml --timeout 5m

      - name: Run go vet
        run: go vet ./...

      - name: Run tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -func=coverage.out

      - name: Upload coverage to artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-go${{ matrix.go }}
          path: apps/backend/coverage.out
          retention-days: 7

      - name: Build binary
        run: |
          mkdir -p bin
          go build -v -ldflags="-s -w" -o bin/server ./cmd/go-boilerplate

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-go${{ matrix.go }}
          path: apps/backend/bin/server
          retention-days: 7

  security:
    name: Security Scans
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/backend
    strategy:
      matrix:
        go: [ '1.25.0' ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: apps/backend/go.sum

      - name: Cache go tool binaries
        uses: actions/cache@v4
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-tools-${{ hashFiles('apps/backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Run gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -fmt=json -out=gosec-report.json ./... || true

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-go${{ matrix.go }}
          path: apps/backend/gosec-report.json
          retention-days: 30
